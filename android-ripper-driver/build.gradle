plugins {
    id 'net.ltgt.apt' version '0.10'
    id "de.undercouch.download" version "1.2"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'de.undercouch.download'

import de.undercouch.gradle.tasks.download.Download

// Configure the repository
uploadArchives {
    repositories {
        mavenDeployer {
	    pom.artifactId = 'android-ripper-common'
            repository(url: uri("pomRepo"))
        }
    }
}

task downloadSmaliTools(type: Download) {
    src (['https://bitbucket.org/JesusFreke/smali/downloads/smali-2.2.2.jar',
         'https://bitbucket.org/JesusFreke/smali/downloads/baksmali-2.2.2.jar',
         'https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.3.1.jar'])
    dest 'tools'
}



dependencies {
    //compile 'org.apache.commons:commons-lang3:3.7'
    // compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile files('lib/custom_gson_2.8.1.jar')
    compile files('lib/commons-lang3-3.5.jar')
    compile project (':android-ripper-common')
    
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

   
    compileOnly 'org.projectlombok:lombok:1.16.18'
	
    apt "org.projectlombok:lombok:1.16.18"
    
    testCompile 'junit:junit:4.12'
    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.9.0'

}

task run(type: JavaExec) {
    println "ANDROID_HOME=" + System.env.ANDROID_HOME
    def newPath = System.env.JAVA_HOME + "\\bin" + ";" + System.env.ANDROID_HOME + "\\tools" + ";" + System.env.ANDROID_HOME + "\\platfrom-tools" + ";" + System.env.ANDROID_HOME + "\\build-tools\\24.0.1" + ";" + System.env.Path
    println "NEW PATH=" + newPath
    environment 'PATH', newPath
    println "PATH=" + System.env.Path
    main "it.unina.android.ripper.boundary.AndroidRipper"
    classpath sourceSets.main.runtimeClasspath
    if (project.hasProperty("apk")) {
        args apk
    }
}

task debug(type: JavaExec) {
    println "ANDROID_HOME=" + System.env.ANDROID_HOME
    def newPath = System.env.JAVA_HOME + "\\bin" + ";" + System.env.ANDROID_HOME + "\\tools" + ";" + System.env.ANDROID_HOME + "\\platfrom-tools" + ";" + System.env.ANDROID_HOME + "\\build-tools\\24.0.1" + ";" + System.env.Path
    println "NEW PATH=" + newPath
    environment 'PATH', newPath
    println "PATH=" + System.env.Path
    main "it.unina.android.ripper.boundary.AndroidRipper"
    classpath sourceSets.main.runtimeClasspath
    jvmArgs '-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8787'.split(' ')
    if (project.hasProperty("apk")) {
        args apk
    }
}

task startemulator(type: Exec) {
    def emulator = new File(System.env.ANDROID_HOME + "emulator/emulator").getAbsoluteFile()
    commandLine new File(System.env.ANDROID_HOME + "emulator/emulator").getAbsoluteFile()
    args '-avd testX86'.split(' ')
}


downloadSmaliTools